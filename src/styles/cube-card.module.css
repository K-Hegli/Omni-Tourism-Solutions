/* Page-wide box model safety */
* { box-sizing: border-box; }

/* Cube dimensions and depth - CUBE-SHAPED: wider and shorter */
:root {
  --card-h-desktop: 480px;  /* Much shorter - cube-like proportions */
  --card-w-desktop: 700px;  /* Wider to match height for cube shape */
  --card-h-mobile: 420px;
  --card-w-mobile: 380px;
  --depth-desktop: 180px;   /* Depth adjusted for cube proportions */
  --depth-mobile: 110px;
  --face-padding: 20px;     /* Reduced since inner border adds space */
  --gap: 10px;              /* Tighter gaps */
  --face-header-h: 48px;    /* Compact header */
  --face-footer-h: 34px;    /* Compact footer */

  /* Omni brand colors */
  --brand-primary: #ff5c33;
  --brand-secondary: #ff2a5f;
  --brand-accent: #ff7a33;

  /* Surface colors */
  --surface-main: #1a1a1a;
  --surface-secondary: #0d0d0d;
  --surface-accent: #2a2a2a;
  --border-color: rgba(255, 92, 51, 0.25);
  --border-secondary: rgba(255, 255, 255, 0.1);

  /* Text colors */
  --text-primary: #e0e0e0;
  --text-secondary: #b0b0b0;
  --text-muted: #888888;

  /* Additional color aliases for ROI */
  --primary: var(--brand-primary);
  --accent: var(--brand-secondary);
  --border: var(--border-color);
}

/* Main card container - renamed to avoid global .card conflicts */
.cubeCard {
  width: var(--card-w-desktop);
  max-width: 100%;
  height: var(--card-h-desktop) !important;
  perspective: 1600px;
  overflow: hidden !important;
  isolation: isolate;
  contain: layout paint style;
  margin: 0 auto;
  position: relative;
  border-radius: 12px;
  cursor: pointer;
  box-sizing: border-box !important;
  background-clip: padding-box;
  padding: 0 !important;  /* Override global .card padding */
}

/* 3D Inner rotator - this spins the cube */
.cardInner {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 700ms cubic-bezier(0.2, 0.9, 0.2, 1);
  will-change: transform;
  border-radius: 12px;
}

/* Face rhythm: TWO-LAYER SYSTEM - 3D geometry + content overlay */
.face { 
  position: absolute !important;
  inset: 0 !important;
  display: block !important;  /* Simple block, not flex */
  padding: 0 !important;      /* No padding on the 3D face itself */
  border-radius: 12px;
  background: linear-gradient(145deg, var(--surface-main), var(--surface-secondary));
  box-shadow:
    0 10px 30px rgba(0, 0, 0, 0.6),
    inset 0 0 0 1px rgba(255, 255, 255, 0.02);
  backface-visibility: hidden;
  transform-style: preserve-3d;
  overflow: hidden !important;
  border: 1px solid var(--border-color);
  box-sizing: border-box !important;
}

/* Content wrapper - INNER BORDER with safe padding zone */
.faceContent {
  position: absolute !important;
  top: 12px !important;      /* Inner border offset */
  left: 12px !important;
  right: 12px !important;
  bottom: 12px !important;
  width: auto !important;
  height: auto !important;
  padding: var(--face-padding) !important;
  display: flex !important;
  flex-direction: column !important;
  box-sizing: border-box !important;
  overflow: hidden !important;
  margin: 0 !important;
  /* Visual inner border */
  border: 1px solid rgba(255, 92, 51, 0.15);
  border-radius: 8px;
  background: rgba(0, 0, 0, 0.2);  /* Subtle background to show inner area */
}

/* Reduce translateZ to avoid clipping while keeping depth */
.face.front  { transform: rotateY(0deg)   translateZ(var(--depth-desktop)); }
.face.right  { transform: rotateY(90deg)  translateZ(var(--depth-desktop)); }
.face.back   { transform: rotateY(180deg) translateZ(var(--depth-desktop)); }
.face.left   { transform: rotateY(270deg) translateZ(var(--depth-desktop)); }

/* Tighten typography to preserve space */
.header { 
  display: flex !important; 
  flex-direction: column !important; 
  gap: 3px;  /* Tighter gap */
  flex: 0 0 auto !important;
  height: var(--face-header-h) !important;
  max-height: var(--face-header-h) !important;
  min-height: var(--face-header-h) !important;
  overflow: hidden !important;
  margin: 0 0 var(--gap) 0 !important;
  padding: 0 !important;
  box-sizing: border-box !important;
  width: 100% !important;
}
.title { 
  font-size: 0.95rem;  /* Compact */
  line-height: 1.1; 
  margin: 0 !important; 
  padding: 0 !important;
  font-weight: 600; 
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.subtitle { 
  font-size: 0.78rem;  /* Compact */
  margin: 0 !important; 
  padding: 0 !important;
  color: var(--text-muted); 
  line-height: 1.1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Body isolation: FLEX GROW - takes all remaining space */
.body { 
  flex: 1 1 0 !important;
  min-height: 0 !important;
  width: 100% !important;
  overflow: visible !important;  /* Allow natural content flow */
  display: grid !important;  /* Changed to grid for horizontal layout */
  grid-template-columns: 1fr 1fr !important;  /* Two columns */
  gap: 20px !important;  /* Space between columns */
  margin: 0 !important;
  padding: 0 !important;
  box-sizing: border-box !important;
}
.bodyInner {
  /* Remove bodyInner wrapping - content goes directly in body grid */
  flex: 1 1 auto !important;
  width: 100% !important;
  overflow: visible !important;
  padding: 0;
  box-sizing: border-box !important;
  margin: 0 !important;
  display: contents !important;  /* Children become grid items */
}

.iconWrapper {
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--brand-primary);
  flex-shrink: 0;
  background: linear-gradient(145deg, #1e1e1e, #121212);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.08);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
}

.icon {
  color: inherit;
  width: 36px;
  height: 36px;
}

.titleSection {
  flex: 1;
  min-width: 0; /* Allow text to wrap */
}

/* REMOVE CONFLICTING DUPLICATE .body RULE */

/* UNIFIED CONTENT ARCHITECTURE - Horizontal two-column layout */
.section { 
  margin-bottom: 0;  /* No bottom margin in grid */
  display: flex;
  flex-direction: column;
}
.sectionTitle { 
  font-size: 0.85rem;  /* Compact */
  margin-bottom: 6px;
  color: var(--brand-primary); 
  font-weight: 600;
  line-height: 1.15;
}

.bulletList {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 5px;  /* Tight spacing */
}

.bulletList li {
  font-size: 0.80rem;  /* Compact */
  line-height: 1.25;
  color: var(--text-secondary);
}

.metricsGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 8px 10px;  /* Increased spacing */
  align-items: center;
}

.metricLabel {
  font-size: 0.82rem;  /* Slightly larger */
  color: var(--text-muted);
  line-height: 1.2;
}

.metricValue {
  font-size: 0.94rem;  /* Slightly larger */
  font-weight: bold;
  text-align: right;
  color: var(--brand-primary);
  line-height: 1.2;
}

.highlight {
  font-size: 1.05rem;  /* Slightly larger */
  font-weight: bold;
  color: var(--brand-secondary);
  text-align: center;
  margin-top: 10px;  /* More space */
  line-height: 1.2;
}

/* content structure enforcement */
.face p, .face ul { margin: 0; padding: 0; }
.face ul { list-style: none; display: grid; gap: 8px; }

.subtitle {
  font-size: 0.9rem;
  color: var(--text-muted);
  line-height: 1.4;
  margin: 0;
}

.pilotText {
  font-size: 0.9rem;
  color: var(--text-secondary);
  line-height: 1.4;
  margin: 0;
}

.bullets {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.bullet {
  font-size: 0.9rem;
  color: var(--text-secondary);
  line-height: 1.4;
  padding-left: 1.2em;
  position: relative;
  margin: 0;
}

.bullet::before {
  content: 'â€º';
  position: absolute;
  left: 0;
  color: var(--brand-primary);
  font-weight: bold;
}

.bulletStrong {
  color: var(--brand-primary);
  font-weight: 600;
}

/* ROI ultra-compact to fit all content */
.roi { display:grid; gap:6px; }
.roi .roiAssumptions { font-size: 0.78rem; color: var(--text-muted); margin: 0 0 5px 0; line-height: 1.2; }
.roi .metrics { display:grid; grid-template-columns: 1fr 1fr; gap:5px 8px; }
.roi .label { font-size: .78rem; color:var(--text-muted); line-height: 1.15; }
.roi .value { font-size: 0.9rem; color:var(--primary); font-weight:700; text-align:right; line-height: 1.15; }
.roi .highlight { grid-column:1/-1; text-align:center; color:var(--accent); font-weight:800; font-size:clamp(0.95rem,1.5vw,1.1rem); margin-top: 5px; line-height: 1.15; }

/* controlled overflow only when needed (wrap metrics in .body-scroll) */
.body-scroll { max-height: calc(var(--card-h-desktop) - 260px); overflow-y: auto; padding-right:6px; }

/* Footer minimal reserve */
.footer { 
  flex: 0 0 auto !important;
  height: var(--face-footer-h) !important;
  min-height: var(--face-footer-h) !important;
  max-height: var(--face-footer-h) !important;
  width: 100% !important;
  padding: 8px 0 0 0 !important;
  margin: var(--gap) 0 0 0 !important;
  border-top: 1px solid rgba(255,255,255,0.03); 
  display: flex !important; 
  justify-content: center !important; 
  align-items: center !important;
  overflow: hidden !important;
  box-sizing: border-box !important;
}

.hint {
  font-size: 0.75rem;
  color: var(--text-muted);
  margin: 0;
  text-align: center;
  line-height: 1.15;
}

/* CTA Button */
.ctaButton {
  margin-top: auto;
  background: linear-gradient(90deg, #ff2a5f, #ff5c33);
  color: #0a0a0a;
  border: none;
  padding: 10px 16px;
  border-radius: 8px;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 600;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(255, 92, 51, 0.25);
  width: 100%;
  max-width: 200px;
}

.ctaButton:hover {
  background: linear-gradient(90deg, #ff5c33, #ff7a33);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(255, 92, 51, 0.4);
}

/* Navigation dots */
.navDots {
  display: flex;
  justify-content: center;
  gap: 8px;
}

.navDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid rgba(255, 92, 51, 0.5);
  cursor: pointer;
  transition: all 0.2s ease;
}

.navDot:hover {
  background: rgba(255, 92, 51, 0.3);
}

.navDot.active {
  background: var(--brand-primary);
  border-color: var(--brand-primary);
}

/* External controls (below the cube) */
.controls {
  margin-top: 12px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 8px;
}

.controlBtn {
  background: transparent;
  border: 1px solid var(--border-secondary);
  color: var(--text-secondary);
  padding: 6px 10px;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 14px;
}

.controlBtn:hover {
  background: rgba(255, 92, 51, 0.08);
  color: var(--brand-primary);
  border-color: var(--brand-primary);
}

.dots {
  display: flex;
  gap: 8px;
  align-items: center;
}

.dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: #333;
  border: 1px solid var(--border-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
}

.dot:hover {
  background: rgba(255, 92, 51, 0.3);
  border-color: rgba(255, 92, 51, 0.5);
}

.dot.active {
  background: var(--brand-primary);
  border-color: var(--brand-primary);
}

/* Debug indicator */
.debugIndicator {
  position: absolute;
  top: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.8);
  color: var(--brand-primary);
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-family: monospace;
  z-index: 10;
  pointer-events: none;
}

/* Hover effects */
.card:hover {
  transform: translateY(-2px);
}

.card:hover .face {
  box-shadow:
    0 12px 32px rgba(0, 0, 0, 0.8),
    inset 0 0 0 1px rgba(255, 92, 51, 0.1);
}

/* Focus styles */
.card:focus-visible {
  outline: 2px solid var(--brand-primary);
  outline-offset: 4px;
}

/* Responsive breakpoints */
@media (max-width:1400px) {
  :root {
    --card-h-desktop: 460px;
    --card-w-desktop: 650px;
    --face-header-h: 50px;
    --face-footer-h: 34px;
    --face-padding: 20px;
  }
  .cubeCard { 
    height: var(--card-h-desktop) !important; 
    width: var(--card-w-desktop);
  }
  .face.front  { transform: rotateY(0deg)   translateZ(170px) !important; }
  .face.right  { transform: rotateY(90deg)  translateZ(170px) !important; }
  .face.back   { transform: rotateY(180deg) translateZ(170px) !important; }
  .face.left   { transform: rotateY(270deg) translateZ(170px) !important; }
}
@media (max-width:820px) {
  :root {
    --card-h-desktop: var(--card-h-mobile);
    --card-w-desktop: var(--card-w-mobile);
    --face-header-h: 48px;
    --face-footer-h: 32px;
    --face-padding: 18px;
    --gap: 10px;
  }
  .cubeCard { 
    height: var(--card-h-mobile) !important;
    width: var(--card-w-mobile);
  }
  .face.front  { transform: rotateY(0deg)   translateZ(var(--depth-mobile)) !important; }
  .face.right  { transform: rotateY(90deg)  translateZ(var(--depth-mobile)) !important; }
  .face.back   { transform: rotateY(180deg) translateZ(var(--depth-mobile)) !important; }
  .face.left   { transform: rotateY(270deg) translateZ(var(--depth-mobile)) !important; }
  
  /* Stack sections vertically on mobile */
  .body {
    grid-template-columns: 1fr !important;
    gap: 12px !important;
  }
  
  .roi .metrics { grid-template-columns: 1fr; }
  .roi .value { text-align: left; }
  .section { margin-bottom: 0; }
  .bulletList { gap: 5px; }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .cardInner {
    transition: none;
  }

  .ctaButton {
    transition: none;
  }

  .controlBtn, .dot, .navDot {
    transition: none;
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  :root {
    --border-color: rgba(255, 92, 51, 0.8);
    --text-secondary: #ffffff;
    --text-muted: #cccccc;
  }
}

/* Print styles */
@media print {
  .cubeCard {
    break-inside: avoid;
    page-break-inside: avoid;
  }

  .controls {
    display: none;
  }

  .debugIndicator {
    display: none;
  }
}